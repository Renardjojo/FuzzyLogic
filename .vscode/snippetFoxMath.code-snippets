{
	"MIT": {
		"prefix": "LICENCE",
		"body": [
			"/*",
			" * Project : $WORKSPACE_NAME",
			" * Editing by Six Jonathan",
			" * Date : $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE - $CURRENT_HOUR h $CURRENT_MINUTE",
			" * ",
			" * Copyright (C) $CURRENT_YEAR Six Jonathan",
			" * This file is subject to the license terms in the LICENSE file",
			" *	found in the top-level directory of this distribution.",
			" */",
			""
		],
		"description": "Lisence"
	},

	"headerWithMIT": {
		"prefix": "hLICENCE",
		"body": [
			"/*",
			" * Project : $WORKSPACE_NAME",
			" * Editing by Six Jonathan",
			" * Date : $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE - $CURRENT_HOUR h $CURRENT_MINUTE",
			" * ",
			" * Copyright (C) $CURRENT_YEAR Six Jonathan",
			" * This file is subject to the license terms in the LICENSE file",
			" *	found in the top-level directory of this distribution.",
			" */",
			"",			
			"#pragma once",
			"",
			"namespace $WORKSPACE_NAME::${TM_DIRECTORY/^.+\\/(.*)$/$1/}",
			"{",
			"$0",
			"} /*namespace $WORKSPACE_NAME::${TM_DIRECTORY/^.+\\/(.*)$/$1/}*/",
			""
		],
		"description": "header with lisence"
	},

	"class": {
		"prefix": "cl",
		"body": [
			"class ${TM_FILENAME/(.*)\\..+$/$1/}",
			"{",
			"\tprivate:",
			"",
			"\tprotected:",
			"",
			"\t#pragma region attribut",
			"\t#pragma endregion //!attribut",
			"",
			"\t#pragma region static attribut",
			"\t#pragma endregion //! static attribut",
			"",
			"\t#pragma region methods",
			"\t#pragma endregion //!methods",
			"",
			"\tpublic:",
			"",
			"\t#pragma region constructor/destructor",
			"",
			"\tconstexpr inline",
			"\t${TM_FILENAME/(.*)\\..+$/$1/} () noexcept \t\t\t\t\t= default;",
			"",
			"\tconstexpr inline",
			"\t${TM_FILENAME/(.*)\\..+$/$1/} (const ${TM_FILENAME/(.*)\\..+$/$1/}& other) noexcept\t\t\t= default;",
			"",
			"\tconstexpr inline",
			"\t${TM_FILENAME/(.*)\\..+$/$1/} (${TM_FILENAME/(.*)\\..+$/$1/}&& other) noexcept\t\t\t\t= default;",
			"",
			"\tinline",
			"\tvirtual ~${TM_FILENAME/(.*)\\..+$/$1/} () noexcept\t\t\t\t= default;",
			"",
			"\tconstexpr inline",
			"\t${TM_FILENAME/(.*)\\..+$/$1/}& operator=(${TM_FILENAME/(.*)\\..+$/$1/} const& other) noexcept\t\t\t= default;",
			"",
			"\tconstexpr inline",
			"\t${TM_FILENAME/(.*)\\..+$/$1/}& operator=(${TM_FILENAME/(.*)\\..+$/$1/} && other) noexcept\t\t\t= default;",
			"",
			"\t#pragma endregion //!constructor/destructor",
			"",
			"\t#pragma region methods",
			"\t#pragma endregion //!methods",
			"",
			"\t#pragma region accessor",
			"\t#pragma endregion //!accessor",
			"",
			"\t#pragma region mutator",
			"\t#pragma endregion //!mutator",
			"",
			"\t#pragma region operator",
			"\t#pragma endregion //!operator",
			"",
			"\t#pragma region convertor",
			"\t#pragma endregion //!convertor",
			"",
			"};"
		],
		"description": "create class"
	}
}